Git
Study Guide

1
Versa what?!
What is version control?
Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.

2
Where the heart is
What is the difference between distributed and centralized version control
systems?
Centralized Version Control Systems have a single server that contains all the versioned files, and a number of clients that check out files from that central place. On the other hand in distributed vcs the clients fully mirror the repository.

3
Versa who?!
What does a version control program do for us?
Provides a great way to collaborate with different groups of people remotely in a simple project

4
Committing to git
What is a commit?
Takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.

5
Checking out git
What is a check out?
Enables you to switch to a specific branch

6
It’s like a tree limb
What is a branch?
A lightweight movable pointer to a specific commit

7
The life of a limb
How long are branches in git supposed to exist?
Until you merge them.

8
Tree growth
How do you create a branch in git?
"git checkout" and add "-b" to switch to it.

9
Swinging on a vine
How do you switch branches in git?
"git checkou <name of branch>" 

10
Taping it together
How do you merge branches in git?
switch to your master branch and use command "git merge"

11
Status
How do you check the status of the files you are presently working on?
"git status"

12
Adding to the chaos
How do you add files to the repository?
"git add"

13
The main line
What is the name for the primary branch in git?
Master Branch

14
What limb are you on?
How do you check which branch you presently have checked out?
run "git branch" and view the "*" symbol. This indicates the branch you are currently on.

15
Git what?!
What is github?
It is a web-based git repository systems that enables you to share your git and allow remote collaborations.

16
We see a need!
Why was git created?
It was created as a result of bitkeeper's free of charge status and the need of developing linux's own tool based on bitkeeper.

17
A day in the life of git
What is a typical git workflow?
Long-Running branches which involves having a stable master branch and have another parallel branch named "develop" or "next".

18
Why git?
What makes git different than other version control systems?
 Git doesn’t think of or store its data this way. Instead, Git thinks of its data more like a set of snapshots of a miniature filesystem.

19
What were they thinking?!
What were the design criteria for git?


    Speed

    Simple design

    Strong support for non-linear development (thousands of parallel branches)

    Fully distributed

    Able to handle large projects like the Linux kernel efficiently (speed and data size)


20
Time machine
How do we view the past of a project with git?
"git log"

21
Commit Comment
How much information, and what kind of information should be in a commit
message?
Enough information to provide details of what was done!

22
Great Scott!
If there was a mistake made in the past of a project, how should we go about correcting that mistake?
View git log and check out the specific commit to work on. It is important to pay attention to the possible merging conflicts for successful corrections.

Done!